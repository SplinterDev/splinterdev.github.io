{"version":3,"sources":["components/Logbook/Entry.tsx","components/Logbook/Logbook.tsx"],"names":["Entry","entryDate","useParams","useState","entry","setEntry","useEffect","fetch","then","response","text","Logbook","useRouteMatch","path","url","className","entries","map","i","to"],"mappings":"2OA4BeA,EAxBD,WACZ,IAAQC,EAAcC,cAAdD,UACR,EAA0BE,qBAA1B,mBAAOC,EAAP,KAAcC,EAAd,KAYA,OAVAC,qBAAU,WACRC,MAAM,8EAAD,OAC2EN,EAD3E,QAGFO,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GACLL,EAASK,QAEZ,CAACT,IAEAG,EAEA,kCACE,cAAC,IAAD,UAAgBA,MAIf,2CCIMO,UAvBf,WACE,MAAsBC,cAAdC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,IAEd,OACE,sBAAKC,UAAU,UAAf,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOF,KAAI,UAAKA,EAAL,eAAX,SACE,cAAC,EAAD,QAGJ,gCACE,6BACGG,EAAQC,KAAI,SAACb,EAAOc,GAAR,OACX,6BACE,cAAC,IAAD,CAAMC,GAAE,UAAKL,EAAL,YAAYV,GAApB,SAA8BA,KADvBc","file":"static/js/5.e74f9649.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport { useParams } from 'react-router-dom'\n\nconst Entry = (): React.ReactElement => {\n  const { entryDate } = useParams<{ entryDate: string }>()\n  const [entry, setEntry] = useState<string>()\n\n  useEffect(() => {\n    fetch(\n      `https://raw.githubusercontent.com/SplinterDev/fjcm/main/src/assets/logbook/${entryDate}.md`,\n    )\n      .then((response) => response.text())\n      .then((text) => {\n        setEntry(text)\n      })\n  }, [entryDate])\n\n  if (entry) {\n    return (\n      <article>\n        <ReactMarkdown>{entry}</ReactMarkdown>\n      </article>\n    )\n  }\n  return <div>Loading</div>\n}\n\nexport default Entry\n","import React from 'react'\nimport './Logbook.scss'\nimport entries from '../../assets/logbook/entries.json'\nimport { Link, Route, Switch, useRouteMatch } from 'react-router-dom'\nimport Entry from './Entry'\n\nfunction Logbook(): React.ReactElement {\n  const { path, url } = useRouteMatch()\n\n  return (\n    <div className=\"Logbook\">\n      <Switch>\n        <Route path={`${path}/:entryDate`}>\n          <Entry />\n        </Route>\n      </Switch>\n      <aside>\n        <ul>\n          {entries.map((entry, i) => (\n            <li key={i}>\n              <Link to={`${url}/${entry}`}>{entry}</Link>\n            </li>\n          ))}\n        </ul>\n      </aside>\n    </div>\n  )\n}\n\nexport default Logbook\n"],"sourceRoot":""}